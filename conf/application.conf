# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="ObHoPfrBN63V0cff=2x9=^biAt@@cymZYpW8GHHvTiYNrO=>]fa0B:DcwSJGap?i"

# The application languages
# ~~~~~
application.langs="en,de"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global
application.global = "utils.PlayGlobalSettings"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
#db.default.driver=org.postgresql.Driver
#db.default.url="jdbc:postgresql://localhost/gymixx"
#db.default.user=postgres
#db.default.password=postgres
#db.default.connectionPool = disabled
#db.default.keepAliveConnection = true

#db.default.url=${?DATABASE_URL}
slick.default="models.*"

#slick.dbs.default.driver="slick.driver.PostgresDriver$"
#slick.dbs.default.db.driver="org.postgresql.Driver"
#slick.dbs.default.db.url="jdbc:postgresql://localhost/gymix"
#slick.dbs.default.db.user="postgres"
#slick.dbs.default.db.password="postgres"

#default = {
#  url = "jdbc:postgresql://localhost/gymix"
#  driver = org.postgresql.Driver
#  connectionPool = disabled
#  keepAliveConnection = true
#}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
#evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=WARN

# Logger used by the framework:
logger.play=WARN

# Logger provided to your application:
logger.application=TRACE

# added by Fabio to accept our self-signed (or any other) cert (TODO: import the SS-certificates)
ws.acceptAnyCertificate=true
ws.useProxyProperties=true
ws.ssl.hostnameVerifierClassName=blabla

play {
  # See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
  crypto.secret = "changeme"
  play.i18n.langs = ["en"]

  session.cookieName = "silhouette_session"
  flash.cookieName = "silhouette_flash"
  akka.actor-system = "silhouette"
}

db {
  host = "localhost"
  database = "gymixx"
  username = "postgres"
  password = "postgres"
}


silhouette {
  authenticator {
    session {
      sessionKey = "auth"
      encryptAuthenticator = true
      useFingerprinting = false
      authenticatorIdleTimeout = 600
      authenticatorExpiry = 600
    }
    cookie {
      name = "silhouette_auth"
      path = "/"
      domain = "localhost"
      secure = false
      useFingerprinting = false
      maxAge = 31536000 # One year in seconds
      #idleTimeout = 31536000 # One year in seconds
      expiry = 31536000 # One year in seconds
    }
  }

  oauth1TokenSecretProvider {
    cookieName = "silhouette_oauth1"
    cookiePath = "/"
    cookieDomain = "localhost"
    secureCookie = "false"
    httpOnlyCookie = "true"
    expirationTime = 600
  }

  oauth2StateProvider {
    cookieName = "silhouette_oauth2"
    cookiePath = "/"
    cookieDomain = "localhost"
    secureCookie = "false"
    httpOnlyCookie = "true"
    expirationTime = 600
  }

  facebook {
    authorizationUrl = "https://graph.facebook.com/v2.3/oauth/authorize"
    accessTokenUrl = "https://graph.facebook.com/v2.3/oauth/access_token"
    redirectURL = "https://localhost/signin/facebook"
    clientId = "CHANGEME"
    clientSecret = "CHANGEME"
    scope = "email"
  }

  google {
    authorizationUrl = "https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl = "https://accounts.google.com/o/oauth2/token"
    redirectUrl = "https://localhost/signin/google"
    clientId = "CHANGEME"
    clientSecret = "CHANGEME"
    scope = "email profile"
  }

  twitter {
    requestTokenUrl = "https://twitter.com/oauth/request_token"
    accessTokenUrl = "https://twitter.com/oauth/access_token"
    authorizationUrl = "https://twitter.com/oauth/authenticate"
    callbackUrl = "https://localhost/signin/twitter"
    consumerKey = "CHANGEME"
    consumerSecret = "CHANGEME"
  }
}


# Assets configuration
# ~~~~~
"assets.cache./public/stylesheets/gymix.css"="max-age=3600"

