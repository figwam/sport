# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# debug routes
# GET     /debugToken                          controllers.ApigeeCallouts.getToken(code,redirect_uri,authorizationHeader)
# GET     /debugAddress                        controllers.ApigeeCallouts.getAddress(accessToken)

# Home page
GET         /                                                        controllers.Application.index
GET         /th/:theme                                               controllers.Application.theme(theme)

# Authentication
GET         /login                                                   controllers.Application.login
POST        /login                                                   controllers.Application.authenticate
GET         /logout                                                  controllers.Application.logout

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                            controllers.Assets.at(path="/public", file)

#Consent
GET         /consent                                                 controllers.Application.consent(backend : String)
GET         /consent/verifyaddress                                   controllers.ConsentVerifyAddress.index(backend : String, response_type, app : String)
GET         /consent/verifyaddress/form                              controllers.ConsentVerifyAddress.form
POST        /consent/verifyaddress/submit                            controllers.ConsentVerifyAddress.submit
GET         /consent/verifyaddress/summary                           controllers.ConsentVerifyAddress.summary(firstName: String, backend : String, response_type: String, app : String)

GET         /consent/tokenInfo                                       controllers.ConsentToken.index(backend)
POST        /consent/tokenInfo/consentRedirect                       controllers.ConsentToken.consentRedirect(backend)
GET         /consent/tokenInfo/consentCallback/code                  controllers.ConsentToken.consentCallbackResponseTypeCode(backend)
GET         /consent/tokenInfo/consentCallback/token                 controllers.ConsentToken.consentCallbackResponseTypeToken(backend)

#Consent payment
GET         /consent/payment/login                                   controllers.ConsentPayment.login(backend)
GET         /consent/payment/index                                   controllers.ConsentPayment.index(backend)
GET         /consent/payment/reserve                                 controllers.ConsentPayment.reserve(token, amount, transaction_id, backend)
GET         /consent/payment/pay                                     controllers.ConsentPayment.pay(token, amount, transaction_id, reserved, backend)

GET         /consent/paymentv2                                       controllers.PaymentV2.index(backend)
GET         /consent/paymentv2/transactions                          controllers.PaymentV2.transactions(backend)
GET         /consent/paymentv2/transactions/selfcare                 controllers.PaymentV2.transactionsselfcare(backend)
GET         /consent/paymentv2/transactions/callback                 controllers.PaymentV2.transactionscallback(backend, flow)
GET         /consent/paymentv2/transactions/partneragent             controllers.PaymentV2.transactionspartneragent(backend)
POST        /consent/paymentv2/transactions/partneragentRedirect     controllers.PaymentV2.partneragentconsentRedirect(backend)
GET         /consent/paymentv2/pay                                   controllers.PaymentV2.pay(backend)
GET         /consent/paymentv2/pay/selfcare                          controllers.PaymentV2.payselfcare(backend, flow)
POST        /consent/paymentv2/pay/selfcare2                         controllers.PaymentV2.payselfcareStep2(backend, flow)
GET         /consent/paymentv2/pay/partneragent                      controllers.PaymentV2.paypartneragent(backend, flow)
POST        /consent/paymentv2/pay/partneragentRedirect              controllers.PaymentV2.paypartneragentRedirect(backend, flow)
POST        /consent/paymentv2/pay/partneragent                      controllers.PaymentV2.paypartneragentApigeeCall(backend, flow)
GET         /consent/paymentv2/refund                                controllers.PaymentV2.refund(backend)

#Consent Location
GET 		/consent/location/										 controllers.Location.index(backend)
GET 		/consent/location/consentCallback 						 controllers.Location.consentCallback(backend)
GET 		/consent/location/device/pull							 controllers.Location.getDeviceLocation(backend)
GET 		/consent/location/devices								 controllers.Location.getDeviceIndex(backend)

#Consent payment
GET         /consent/online3rdparty/                                 controllers.Online3rdParty.index(backend)
GET         /consent/online3rdparty/consentCallback                  controllers.Online3rdParty.consentCallback(backend)
GET         /consent/online3rdparty/subscription                     controllers.Online3rdParty.subscription(backend)
GET         /consent/online3rdparty/segment                          controllers.Online3rdParty.segment(backend)
GET         /consent/online3rdparty/birthdate                        controllers.Online3rdParty.birthdate(backend)
GET         /consent/online3rdparty/simcards                         controllers.Online3rdParty.simcards(subscriptionKey, backend)
GET         /consent/online3rdparty/retention                        controllers.Online3rdParty.retention(subscriptionKey, backend)
GET         /consent/online3rdparty/eligibility                      controllers.Online3rdParty.eligibility(subscriptionKey, backend)
GET         /consent/online3rdparty/order                            controllers.Online3rdParty.order(subscriptionKey, backend)

#Consent paymenets flows. 2015-02-16 Amancio
GET         /consent/paymentsflowpartneragent                        controllers.PaymentsFlowPartnerAgent.index(backend)
POST        /consent/paymentsflowpartneragent/consentRedirect        controllers.PaymentsFlowPartnerAgent.consentRedirect(backend)
GET         /consent/paymentsflowpartneragent/consentCallback        controllers.PaymentsFlowPartnerAgent.consentCallback(backend)

GET         /consent/paymentsflowselfcare/                           controllers.PaymentsFlowSelfcare.index(backend)
GET         /consent/paymentsflowselfcare/consentCallback            controllers.PaymentsFlowSelfcare.consentCallback(backend)
GET         /consent/paymentsflowselfcare/saveAmount				 controllers.PaymentsFlowSelfcare.savePaymentAmount()

GET         /consent/call                                            controllers.Calling.index(backend)
GET         /consent/call/consentCallback                            controllers.Calling.consetCallback()

#Implicit OAuth Ajax
GET         /javascriptRoutes                                        controllers.Application.javascriptRoutes
GET         /javascript/oauth-providers.js                           controllers.ConsentVerifyAddress.getOauthProviders(backend: String, app : String)

#Messaging
GET         /messaging                                               controllers.Application.messaging
GET         /messaging/sms                                           controllers.SmsSender.form
POST        /messaging/sms                                           controllers.SmsSender.send

#Mobile
GET			/mobile													 controllers.Application.mobile
GET			/mobile/capacity										 controllers.MobileCapacity.form
GET			/mobile/capacity/withoutAPI								 controllers.MobileCapacity.withoutAPI
GET			/mobile/capacity/withAPI								 controllers.MobileCapacity.withAPI
GET			/mobile/capacity/gaucheWithAPI      				     controllers.MobileCapacity.gaucheWithAPI
GET			/mobile/capacity/gaucheWithoutAPI      					 controllers.MobileCapacity.gaucheWithoutAPI

# SSO Mock
GET         /mock/authenticateSwisscom                               controllers.Application.authenticateSwisscom
GET         /mock/sso                                                controllers.SSOMock.index
GET         /mock/iframetopleft                                      controllers.SSOMock.indexTopLeft
GET         /mock/iframeleft                                         controllers.SSOMock.indexLeft

# Consent Mock
GET         /mock/consent                                            controllers.ConsentMock.index
POST        /mock/consent                                            controllers.ConsentMock.submit



# Map static resources from the /app/public folder to the /public path
#{if play.Play.mode.isDev()}
# ...    GET     /public/                        staticDir:public
#{/}
#{else}
#   GET     d2iu8jbjgczc8x.cloudfront.net/public  staticDir:public
#    GET     /public/                              staticDir:public
#{/}